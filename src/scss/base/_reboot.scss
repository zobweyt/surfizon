@use "sass:map";
@use "base/variables";
@use "mixins/motion";
@use "mixins/borders";

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

body {
  margin: 0 auto;
  min-height: 100vh;
  max-width: 1200px;
  font-family: variables.$font-family-sans-serif;
  font-size: variables.$font-size-base;
  line-height: variables.$line-height-base;
  background: variables.$light;
  padding-inline: 15px;

  @media screen and (width <= #{map.get(variables.$grid-breakpoints, md)}) {
    &::before {
      @include motion.transition(lg, opacity, backdrop-filter);

      content: "";
      position: fixed;
      z-index: -1;
      opacity: 0;
      inset: 0;
    }

    &.overlay {
      overflow: hidden;
      pointer-events: none;

      &::before {
        @include motion.glassmorphism(variables.$dark);

        z-index: 1;
        opacity: 1;
      }
    }
  }
}

main {
  flex: 1;
  width: 100%;
  max-width: 1440px;
  padding-block: map.get(variables.$spacers, 4);
}

hr {
  border: none;
  border-top: variables.$border-width solid variables.$border-color;
  margin-block: map.get(variables.$spacers, 1);
}

@each $size, $value in variables.$font-sizes {
  h#{$size} {
    margin-bottom: map.get(variables.$spacers, 2);
    font-size: $value;
  }
}

p {
  margin-bottom: variables.$paragraph-margin-bottom;
}

abbr[title] {
  text-decoration: underline dotted;
  cursor: help;
  text-decoration-skip-ink: none;
}

address {
  margin-bottom: variables.$paragraph-margin-bottom;
  font: inherit;
}

// Lists

ol,
ul {
  padding-left: 1rem;
}

ol,
ul,
dl {
  margin-bottom: variables.$paragraph-margin-bottom;
}

ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}

dt {
  font-weight: map.get(variables.$font-weights, bold);
}

dd {
  margin-bottom: calc(variables.$paragraph-margin-bottom / 2);
}

blockquote {
  margin: 0 0 1rem;
}

b,
strong {
  font-weight: map.get(variables.$font-weights, bold);
}

small {
  font-size: variables.$font-size-sm;
  color: variables.$muted;
}

mark {
  border-radius: variables.$border-radius-sm;
  background: rgba(variables.$yellow, 25%);
}

/// Sub and Sup
///
/// Prevent `sub` and `sup` elements from affecting the line height in
/// all browsers.

sub,
sup {
  position: relative;
  vertical-align: baseline;
  font-size: variables.$font-size-sm;
  line-height: 0;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

a {
  @include motion.transition(xs, color, opacity, outline-width);

  border-radius: variables.$border-radius-sm;
  text-decoration: none;
  color: variables.$primary;

  &:hover {
    color: variables.$black;
  }

  &:active {
    opacity: 0.5;
  }
}

pre,
code,
kbd,
samp,
var {
  font-family: variables.$font-family-monospace;
}

pre {
  display: block;
  overflow: auto; // 3
  margin-top: 0; // 1
  margin-bottom: 1rem; // 2

  // Account for some code outputs that place code tags in pre tags
  code {
    word-break: normal;
    color: inherit;
  }
}

code {
  word-wrap: break-word;

  // Streamline the style when inside anchors to avoid broken underline and more
  a > & {
    color: inherit;
  }
}

kbd {
  @include borders.border(variables.$border-radius-sm);

  padding: map.get(variables.$spacers, 1);
  background: variables.$light;

  kbd {
    padding: 0;
    font-weight: map.get(variables.$font-weights, bold);
  }
}

figure {
  margin: 0 0 variables.$paragraph-margin-bottom;
}

img,
svg {
  vertical-align: middle;
  width: 100%;
}

// // Tables
// //
// // Prevent double borders

// table {
//   caption-side: bottom;
//   border-collapse: collapse;
// }

// caption {
//   padding-top: $table-cell-padding-y;
//   padding-bottom: $table-cell-padding-y;
//   color: $table-caption-color;
//   text-align: left;
// }

// // 1. Removes font-weight bold by inheriting
// // 2. Matches default `<td>` alignment by inheriting `text-align`.
// // 3. Fix alignment for Safari

// th {
//   font-weight: $table-th-font-weight; // 1
//   text-align: inherit; // 2
//   text-align: -webkit-match-parent; // 3
// }

// thead,
// tbody,
// tfoot,
// tr,
// td,
// th {
//   border-color: inherit;
//   border-style: solid;
//   border-width: 0;
// }

button {
  border: none;
  font: inherit;
  background: transparent;
  cursor: pointer;
  user-select: none;
}

input,
textarea {
  border: none;
  font: inherit;
  user-select: none;

  &:focus {
    outline: none;
  }
}

textarea {
  resize: none;
}

[hidden] {
  display: none !important;
}
