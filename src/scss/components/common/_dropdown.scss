@use "sass:map";
@use "base/variables";
@use "mixins/borders";
@use "mixins/motion";

.dropdown {
  position: relative;

  .dropdown__menu--top-left {
    transform-origin: top left;
  }

  .dropdown__menu--top-right {
    transform-origin: top right;
  }

  .dropdown__menu {
    @include borders.border;
    @include motion.glassmorphism(variables.$white);
    @include motion.transition(scale, opacity, box-shadow, transform);

    position: absolute;
    z-index: variables.$zindex-dropdown;
    border-radius: variables.$border-radius;
    padding: variables.$dropdown-menu-padding;
    opacity: 0;
    transform-origin: top left;
    pointer-events: none;
    scale: variables.$component-active-scale;

    .dropdown__menu__item {
      display: flex;
      align-items: center;
      border-radius: variables.$border-radius;
      padding: variables.$dropdown-menu-item-padding;
      gap: variables.$dropdown-menu-item-gap;

      .icon {
        color: variables.$muted;
      }
    }

    .dropdown__menu__divider {
      content: "";
      border-bottom: variables.$border-width solid variables.$border-color;
      margin-block: map.get(variables.$spacers, 1);
      margin-inline: -#{variables.$dropdown-menu-padding};
    }

    .dropdown__menu__action {
      @include motion.transition(background-color, scale, opacity, outline-width);

      color: inherit;
      user-select: none;

      &:hover {
        background-color: rgba(variables.$light, variables.$glassmorphism-shade-percentage);
      }

      &:active {
        opacity: variables.$component-active-opacity;
        scale: variables.$component-active-scale;
      }

      &.active {
        font-weight: map.get(variables.$font-weights, medium);

        .icon {
          color: variables.$black;
        }
      }
    }

    &.show {
      box-shadow: variables.$box-shadow-lg;
      opacity: 1;
      transition-duration: 250ms;
      pointer-events: auto;
      scale: 1;
    }

    @media screen and (width <= #{map.get(variables.$grid-breakpoints, md)}) {
      $margin: map.get(variables.$spacers, 2);

      position: fixed !important;
      overflow-y: scroll;
      width: auto;
      max-height: 75vh;
      transform: translateY(calc(100% + $margin)) !important;
      transform-origin: bottom;
      transition-duration: 500ms;
      inset: auto $margin $margin !important;
      scale: 1;

      &.show {
        transform: none !important;
        transition-duration: 500ms;
      }
    }
  }
}
